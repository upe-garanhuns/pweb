{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","state","isLoading","usuarios","a","fetch","response","json","body","this","setState","content","className","map","usuario","nome","email","bloqueado","perfilAcesso","id","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0PAuCeA,E,4MAnCbC,MAAQ,CACNC,WAAW,EACXC,SAAU,I,8FAGZ,8BAAAC,EAAA,sEACyBC,MAAM,iBAD/B,cACQC,EADR,gBAEqBA,EAASC,OAF9B,OAEQC,EAFR,OAGEC,KAAKC,SAAS,CAACP,SAAUK,EAAKG,QAAST,WAAW,IAHpD,gD,0EAMA,WACE,MAA8BO,KAAKR,MAA5BE,EAAP,EAAOA,SAEP,OAFA,EAAiBD,UAGR,2CAIP,qBAAKU,UAAU,MAAf,SACE,wBAAQA,UAAU,aAAlB,SACE,sBAAKA,UAAU,YAAf,UACE,sDACCT,EAASU,KAAI,SAAAC,GAAO,OACnB,gCACGA,EAAQC,KADX,MACoBD,EAAQE,MAD5B,MACsCF,EAAQG,UAD9C,MAC4DH,EAAQI,eAD1DJ,EAAQK,kB,GAzBdC,aCSHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.dd528859.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    isLoading: true,\n    usuarios: []\n  };\n\n  async componentDidMount() {\n    const response = await fetch('/api/usuarios');\n    const body = await response.json();\n    this.setState({usuarios: body.content, isLoading: false});\n  }\n\n  render() {\n    const {usuarios, isLoading} = this.state;\n\n    if (isLoading) {\n      return <p>Loading...</p>;\n    }\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <div className=\"App-intro\">\n            <h2>Lista de usu√°rios</h2>\n            {usuarios.map(usuario =>\n              <div key={usuario.id}>\n                {usuario.nome} - {usuario.email} - {usuario.bloqueado} - {usuario.perfilAcesso}\n              </div>\n            )}\n          </div>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}